#BlueJ class context
comment0.target=Point
comment0.text=\r\n\ \r\n\r\n\ @author\ (Linda\ Dominguez)\r\n\ @version\ (2/17/22)\r\n
comment1.params=
comment1.target=Point()
comment1.text=\r\n\ this\ makes\ up\ a\ point\ object\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\r\n\ Tests\ the\ class\ point--\ makes\ new\ poinrs\ and\ retuns\r\n\ if\ they're\ equidistant\ and\ how\ far\ they\ are.\r\n
comment2.params=x\ y
comment2.target=Point(double,\ double)
comment2.text=\r\n\ sets\ coordinates\ on\ point\ object\r\n
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=\r\n\ String\ gives\ detailed\ information\ about\ location\ of\ a\ point\r\n
comment4.params=
comment4.target=double\ getY()
comment4.text=\r\n\ gets\ y\ value\ with\ this.\r\n
comment5.params=
comment5.target=double\ getX()
comment5.text=\r\n\ gets\ x\ value\ with\ this.\r\n
comment6.params=newY
comment6.target=void\ setY\u200B(double)
comment6.text=\r\n\ sets\ y\ value\ with\ this.\r\n
comment7.params=newX
comment7.target=void\ setX\u200B(double)
comment7.text=\r\n\ sets\ y\ value\ with\ this.\r\n
comment8.params=newPoint
comment8.target=double\ findDistance(Point)
comment8.text=\r\n\ takes\ a\ new\ point\ as\ param\r\n\ returns\ the\ distance\ between\ x\ and\ y\r\n
comment9.params=x\ y
comment9.target=boolean\ areEquidistant(Point,\ Point)
comment9.text=\r\n\ Takes\ x\ and\ y\ as\ params\ \r\n\ returns\ if\ they're\ equal\r\n
numComments=11
